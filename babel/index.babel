class Clock extends React.Component{
  constructor(props){
    super(props);
    this.state = {
      switch: true,
      timerString: "1:00",
      min: 1,
      sec: 0,
      sessionLength: 1,
      breakLength: 2,
      pause: true
    }
  }
  
  calculateCurrentCounter = () => {
    var currentTimeInMilliSec = (this.state.min * 1000 * 60) + (this.state.sec*1000);
    var newTimeInMin = (currentTimeInMilliSec - 1000) / (1000*60);
    var minutes = Math.floor(newTimeInMin);
    var seconds = Math.round((newTimeInMin % 1) * 60);
    console.log("min " + minutes + " ,secs " + seconds);
    this.setState({ min: minutes, sec: seconds, timerString: minutes + ":" + ((seconds === 0)? "00" : seconds)});  
  };

  switchSession = () => { 
        this.state.switch? this.setState({min: this.state.breakLength}): this.setState({min: this.state.sessionLength});
    this.setState(prevState => ({ switch: !prevState.switch }))
    
  };

  tick = () => {   
    this.calculateCurrentCounter();
    if(this.state.min === 0 && this.state.sec === 0) this.switchSession();
};

  countDown = () => { this.IntervalId = setInterval( () => this.tick(), 1000); };


  toggleTimer = () => {
    console.log(this.state.pause);
    this.setState(prevState => ({ pause: !prevState.pause }))
    console.log(this.state.pause + ", "+ this.state.switch);
    this.state.pause? clearInterval(this.IntervalId) :this.countDown();
  };

  render(){
    return(
       <div>
        <div onClick={ this.toggleTimer.bind(this) }>{this.state.timerString} {this.state.switch}</div>  
        </div>
            
    )
  }
}




ReactDOM.render(
  <Clock />,
  document.getElementById('container')
);